apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: me-ingress
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls: "true"
spec:
  rules:
    - host: zernico.de
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: me-service
                port:
                  number: 80
  tls:
    - hosts:
        - zernico.de
      secretName: me-tls

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: me
  labels:
    app: me
spec:
  replicas: 2
  selector:
    matchLabels:
      app: me
  template:
    metadata:
      labels:
        app: me
    spec:
      containers:
        - name: me
          image: ghcr.io/zernico/me:latest
          ports:
            - containerPort: 3000
          env:
            - name: NODE_ENV
              value: "production"
            - name: SPOTIFY_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: me-secrets
                  key: SPOTIFY_CLIENT_ID
            - name: SPOTIFY_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: me-secrets
                  key: SPOTIFY_CLIENT_SECRET
            - name: SPOTIFY_REFRESH_TOKEN
              valueFrom:
                secretKeyRef:
                  name: me-secrets
                  key: SPOTIFY_REFRESH_TOKEN
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "256Mi"
              cpu: "200m"
          livenessProbe:
            httpGet:
              path: /
              port: 3000
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: 3000
            initialDelaySeconds: 5
            periodSeconds: 5

---
apiVersion: v1
kind: Service
metadata:
  name: me-service
spec:
  selector:
    app: me
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3000
  type: ClusterIP
